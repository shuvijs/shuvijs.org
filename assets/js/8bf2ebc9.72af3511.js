"use strict";(self.webpackChunkshuvi_document=self.webpackChunkshuvi_document||[]).push([[3613],{9613:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>c});var a=n(9496);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,p=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),m=s(n),c=r,k=m["".concat(p,".").concat(c)]||m[c]||d[c]||l;return n?a.createElement(k,o(o({ref:t},u),{},{components:n})):a.createElement(k,o({ref:t},u))}));function c(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,o=new Array(l);o[0]=m;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var s=2;s<l;s++)o[s]=n[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3373:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>d,frontMatter:()=>l,metadata:()=>i,toc:()=>s});var a=n(2081),r=(n(9496),n(9613));const l={id:"routes",title:"Routes"},o=void 0,i={unversionedId:"reference/conventions/routes",id:"reference/conventions/routes",title:"Routes",description:"Shuvi.js provides a file system-based convention routing rule.",source:"@site/docs/reference/conventions/routes.md",sourceDirName:"reference/conventions",slug:"/reference/conventions/routes",permalink:"/shuvijs.org/docs/reference/conventions/routes",draft:!1,editUrl:"https://github.com/shuvijs/shuvijs.org/tree/master/docs/reference/conventions/routes.md",tags:[],version:"current",frontMatter:{id:"routes",title:"Routes"},sidebar:"reference",previous:{title:"Project Structure",permalink:"/shuvijs.org/docs/reference/conventions/project-structure"},next:{title:"General",permalink:"/shuvijs.org/docs/reference/configuration/general"}},p={},s=[{value:"File structure",id:"file-structure",level:2},{value:"Dynamic Segments",id:"dynamic-segments",level:2},{value:"Catch all routes",id:"catch-all-routes",level:3},{value:"Optional catch all routes",id:"optional-catch-all-routes",level:3},{value:"general rules",id:"general-rules",level:3},{value:"Page",id:"page",level:2},{value:"Usage",id:"usage",level:3},{value:"Example",id:"example",level:3},{value:"Layout",id:"layout",level:2},{value:"Usage",id:"usage-1",level:3},{value:"Example",id:"example-1",level:3}],u={toc:s};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Shuvi.js provides a file system-based convention routing rule.\nRead the agreed files from ",(0,r.kt)("strong",{parentName:"p"},"src/routes")," in the project root directory,\nsuch as  ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"page.js")),", ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"layout.js"))," and ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"api.js")),".\nWhich produces the corresponding ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"Component"))," routing hierarchy."),(0,r.kt)("h2",{id:"file-structure"},"File structure"),(0,r.kt)("p",null,"The names of the directories under src/routes determine the rules for generating routes"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example"),":"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"directory path"),(0,r.kt)("th",{parentName:"tr",align:null},"route path"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"src/routes/"),(0,r.kt)("td",{parentName:"tr",align:null},"/")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"src/routes/a"),(0,r.kt)("td",{parentName:"tr",align:null},"/a")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"src/routes/a/a1"),(0,r.kt)("td",{parentName:"tr",align:null},"/a/a1")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"src/routes/b"),(0,r.kt)("td",{parentName:"tr",align:null},"/b")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"src/routes/b/b1"),(0,r.kt)("td",{parentName:"tr",align:null},"/b/b1")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"src/routes/b/b2"),(0,r.kt)("td",{parentName:"tr",align:null},"/b/b2")))),(0,r.kt)("h2",{id:"dynamic-segments"},"Dynamic Segments"),(0,r.kt)("p",null,"Defining routes by using predefined paths is not always enough for complex applications.\nIn shuvi you can add brackets to a directory name (",(0,r.kt)("inlineCode",{parentName:"p"},"[param]"),") to create a dynamic route (a.k.a. url slugs, pretty urls, and others)."),(0,r.kt)("p",null,"Consider the following directory ",(0,r.kt)("inlineCode",{parentName:"p"},"routes/post/[pid]"),":"),(0,r.kt)("p",null,"Any route like ",(0,r.kt)("inlineCode",{parentName:"p"},"/post/1"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"/post/abc"),", etc. will be matched by ",(0,r.kt)("inlineCode",{parentName:"p"},"routes/post/[pid]"),"."),(0,r.kt)("p",null,"For example, the route ",(0,r.kt)("inlineCode",{parentName:"p"},"/post/abc")," will have the following ",(0,r.kt)("inlineCode",{parentName:"p"},"params")," object:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{ "pid": "abc" }\n')),(0,r.kt)("p",null,"Similarly, the route ",(0,r.kt)("inlineCode",{parentName:"p"},"/post/abc?foo=bar")," will have the following ",(0,r.kt)("inlineCode",{parentName:"p"},"params")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"query")," object:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:"lines",lines:!0},'// params\n{"pid": "abc"}\n// query\n{ "foo": "bar" }\n')),(0,r.kt)("p",null,"Multiple dynamic route segments work the same way. The page ",(0,r.kt)("inlineCode",{parentName:"p"},"routes/post/[pid]/[comment]")," will match the route ",(0,r.kt)("inlineCode",{parentName:"p"},"/post/abc/a-comment")," and its ",(0,r.kt)("inlineCode",{parentName:"p"},"params")," object will be:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{ "pid": "abc", "comment": "a-comment" }\n')),(0,r.kt)("h3",{id:"catch-all-routes"},"Catch all routes"),(0,r.kt)("p",null,"Dynamic routes can be extended to catch all paths by adding three dots (",(0,r.kt)("inlineCode",{parentName:"p"},"..."),") inside the brackets. For example:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"routes/post/[...slug]")," matches ",(0,r.kt)("inlineCode",{parentName:"li"},"/post/a"),", but also ",(0,r.kt)("inlineCode",{parentName:"li"},"/post/a/b"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"/post/a/b/c")," and so on.")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"Note"),": You can use names other than ",(0,r.kt)("inlineCode",{parentName:"p"},"slug"),", such as: ",(0,r.kt)("inlineCode",{parentName:"p"},"[...param]"))),(0,r.kt)("p",null,"Matched parameters will be sent as a query parameter (",(0,r.kt)("inlineCode",{parentName:"p"},"slug")," in the example) to the page, and it will always be an array, so, the path ",(0,r.kt)("inlineCode",{parentName:"p"},"/post/a")," will have the following ",(0,r.kt)("inlineCode",{parentName:"p"},"params")," object:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{ "slug": ["a"] }\n')),(0,r.kt)("p",null,"And in the case of ",(0,r.kt)("inlineCode",{parentName:"p"},"/post/a/b"),", and any other matching path, new parameters will be added to the array, like so:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{ "slug": ["a", "b"] }\n')),(0,r.kt)("h3",{id:"optional-catch-all-routes"},"Optional catch all routes"),(0,r.kt)("p",null,"Catch all routes can be made optional by including the parameter in double brackets (",(0,r.kt)("inlineCode",{parentName:"p"},"[[...slug]]"),")."),(0,r.kt)("p",null,"For example, ",(0,r.kt)("inlineCode",{parentName:"p"},"routes/post/[[...slug]]")," will match ",(0,r.kt)("inlineCode",{parentName:"p"},"/post"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"/post/a"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"/post/a/b"),", and so on."),(0,r.kt)("p",null,"The main difference between catch all and optional catch all routes is that with optional, the route without the parameter is also matched (",(0,r.kt)("inlineCode",{parentName:"p"},"/post")," in the example above)."),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"params")," objects are as follows:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:"lines",lines:!0},'{ } // GET `/post` (empty object)\n{ "slug": ["a"] } // `GET /post/a` (single-element array)\n{ "slug": ["a", "b"] } // `GET /post/a/b` (multi-element array)\n')),(0,r.kt)("h3",{id:"general-rules"},"general rules"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"path"),(0,r.kt)("th",{parentName:"tr",align:null},"route"),(0,r.kt)("th",{parentName:"tr",align:null},"matched url"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"routes/post/create"),(0,r.kt)("td",{parentName:"tr",align:null},"/post/create"),(0,r.kt)("td",{parentName:"tr",align:null},"/post/create")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"routes/post/","[pid]"),(0,r.kt)("td",{parentName:"tr",align:null},"/post/:pid"),(0,r.kt)("td",{parentName:"tr",align:null},"/post/1, /post/abc")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"routes/post/[","[pid]","]"),(0,r.kt)("td",{parentName:"tr",align:null},"/post/:pid?"),(0,r.kt)("td",{parentName:"tr",align:null},"/post, /post/1, /post/abc")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"routes/post/","[...pid]"),(0,r.kt)("td",{parentName:"tr",align:null},"/post/:pid+"),(0,r.kt)("td",{parentName:"tr",align:null},"/post/1/2, /post/a/b/c")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"routes/post/[","[...pid]","]"),(0,r.kt)("td",{parentName:"tr",align:null},"/post/:pid","*"),(0,r.kt)("td",{parentName:"tr",align:null},"/post, /post/1/2, /post/a/b/c")))),(0,r.kt)("h2",{id:"page"},"Page"),(0,r.kt)("p",null,"The directory name determines the path, page.js determines the rendered content.\n",(0,r.kt)("inlineCode",{parentName:"p"},"page.js")," should export a ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"React component"))," by default.page.js is leaf node in the routing tree\uff0c\nCan be nested in any folder."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Note that all future examples will use the .js extension.\nThe extension of the routing file is not limited to ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},".js")),", but can also be ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},".ts")),", ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},".tsx")),", and ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},".jsx")),".")),(0,r.kt)("h3",{id:"usage"},"Usage"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Create a ",(0,r.kt)("inlineCode",{parentName:"li"},"page.js")," file under your ",(0,r.kt)("inlineCode",{parentName:"li"},"routes")," directory."),(0,r.kt)("li",{parentName:"ol"},"Finally, export a React component function from the ",(0,r.kt)("inlineCode",{parentName:"li"},"page.js")," file by default.")),(0,r.kt)("h3",{id:"example"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"export default function Index() {\n  return <div>index</div>;\n}\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"export default function Index() {\n  return <div>a-b</div>;\n}\n")),(0,r.kt)("h2",{id:"layout"},"Layout"),(0,r.kt)("p",null,"Layout is suitable for scenarios that require nested routing.\nSimilar to the ",(0,r.kt)("inlineCode",{parentName:"p"},"<router-view>")," of ",(0,r.kt)("inlineCode",{parentName:"p"},"Vue-router"),"."),(0,r.kt)("p",null,"Layout can be understood as a more advanced page, it has all the capabilities of page,\nand has the ability to share areas without repeated rendering and scheduling of sub-routes."),(0,r.kt)("h3",{id:"usage-1"},"Usage"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Create a ",(0,r.kt)("inlineCode",{parentName:"li"},"layout.js")," file under your ",(0,r.kt)("inlineCode",{parentName:"li"},"routes")," directory."),(0,r.kt)("li",{parentName:"ol"},"Finally, export a React component function from the ",(0,r.kt)("inlineCode",{parentName:"li"},"layout.js")," file by default."),(0,r.kt)("li",{parentName:"ol"},"Use 'RouterView Component' to render your child routes")),(0,r.kt)("h3",{id:"example-1"},"Example"),(0,r.kt)("p",null,"A small example of a shared top navigation bar."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"src/routes/dashboard/layout.js"))," \u2192 ",(0,r.kt)("inlineCode",{parentName:"p"},"/dashboard")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},'import { RouterView } from "@shuvi/runtime";\n\nexport default function Layout() {\n  return (\n    <div>\n      <header>\n        <h1>dashboard</h1>\n        <nav>\n          <Link to="categories">categories</Link>\n          <Link to="articles">articles</Link>\n          <Link to="tags">tags</Link>\n        </nav>\n      </header>\n      <main>\n        <RouterView />\n      </main>\n    </div>\n  );\n}\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"src/routes/dashboard/categories/page.js"))," \u2192 ",(0,r.kt)("inlineCode",{parentName:"p"},"/dashboard/categories")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"export default function () {\n  return <div>categories</div>;\n}\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"src/routes/dashboard/articles/page.js"))," \u2192 ",(0,r.kt)("inlineCode",{parentName:"p"},"/dashboard/articles")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"export default function () {\n  return <div>articles</div>;\n}\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"src/routes/dashboard/tags/page.js"))," \u2192 ",(0,r.kt)("inlineCode",{parentName:"p"},"/dashboard/tags")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"export default function () {\n  return <div>tags</div>;\n}\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"src/routes/dashboard/page.js"))," \u2192 ",(0,r.kt)("inlineCode",{parentName:"p"},"/dashboard")," can be used as index route."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"export default function () {\n  return <div>index</div>;\n}\n")),(0,r.kt)("p",null,"Now,\naccessing any sub-route under /dashboard/ will render the matching layout and page together.\nWhen the route changes, the layout will not be unmounted.\nImplemented regional component sharing"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"Notice"),": Layout and page do not conflict with dynamic segment and can be freely combined.")))}d.isMDXComponent=!0}}]);
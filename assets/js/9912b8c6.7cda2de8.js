"use strict";(self.webpackChunkshuvi_document=self.webpackChunkshuvi_document||[]).push([[9546],{9613:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>d});var o=t(9496);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},l=Object.keys(e);for(o=0;o<l.length;o++)t=l[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(o=0;o<l.length;o++)t=l[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=o.createContext({}),p=function(e){var n=o.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},c=function(e){var n=p(e.components);return o.createElement(s.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},u=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=p(t),d=r,f=u["".concat(s,".").concat(d)]||u[d]||m[d]||l;return t?o.createElement(f,a(a({ref:n},c),{},{components:t})):o.createElement(f,a({ref:n},c))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var l=t.length,a=new Array(l);a[0]=u;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,a[1]=i;for(var p=2;p<l;p++)a[p]=t[p];return o.createElement.apply(null,a)}return o.createElement.apply(null,t)}u.displayName="MDXCreateElement"},8964:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>a,default:()=>m,frontMatter:()=>l,metadata:()=>i,toc:()=>p});var o=t(2081),r=(t(9496),t(9613));const l={id:"compiler",title:"Compiler"},a=void 0,i={unversionedId:"reference/configuration/compiler",id:"reference/configuration/compiler",title:"Compiler",description:"Remove Console",source:"@site/docs/reference/configuration/compiler.md",sourceDirName:"reference/configuration",slug:"/reference/configuration/compiler",permalink:"/shuvijs.org/docs/reference/configuration/compiler",draft:!1,editUrl:"https://github.com/shuvijs/shuvijs.org/tree/master/docs/reference/configuration/compiler.md",tags:[],version:"current",frontMatter:{id:"compiler",title:"Compiler"},sidebar:"reference",previous:{title:"General",permalink:"/shuvijs.org/docs/reference/configuration/general"},next:{title:"Advanced",permalink:"/shuvijs.org/docs/reference/configuration/advanced"}},s={},p=[{value:"Remove Console",id:"remove-console",level:2},{value:"Remove React Properties",id:"remove-react-properties",level:2},{value:"JSX ImportSource",id:"jsx-importsource",level:2},{value:"Styled Components",id:"styled-components",level:2},{value:"Emotion CSS",id:"emotion-css",level:2},{value:"Decorators",id:"decorators",level:2}],c={toc:p};function m(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,o.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"remove-console"},"Remove Console"),(0,r.kt)("p",null,"This transform allows for removing all ",(0,r.kt)("inlineCode",{parentName:"p"},"console.*")," calls in application code (not node_modules). Similar to ",(0,r.kt)("inlineCode",{parentName:"p"},"babel-plugin-transform-remove-console"),"."),(0,r.kt)("p",null,"Remove all ",(0,r.kt)("inlineCode",{parentName:"p"},"console.*")," calls:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"export default {\n  compiler: {\n    removeConsole: true,\n  },\n};\n")),(0,r.kt)("p",null,"Remove ",(0,r.kt)("inlineCode",{parentName:"p"},"console.*")," output except ",(0,r.kt)("inlineCode",{parentName:"p"},"console.error"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'export default {\n  compiler: {\n    removeConsole: {\n      exclude: ["error"],\n    },\n  },\n};\n')),(0,r.kt)("h2",{id:"remove-react-properties"},"Remove React Properties"),(0,r.kt)("p",null,"Allows to remove JSX properties. This is often used for testing. Similar to ",(0,r.kt)("inlineCode",{parentName:"p"},"babel-plugin-react-remove-properties"),"."),(0,r.kt)("p",null,"To remove properties matching the default regex ",(0,r.kt)("inlineCode",{parentName:"p"},"^data-test"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"export default {\n  compiler: {\n    reactRemoveProperties: true,\n  },\n};\n")),(0,r.kt)("p",null,"To remove custom properties:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'module.exports = {\n  compiler: {\n    // The regexes defined here are processed in Rust so the syntax is different from\n    // JavaScript `RegExp`s. See https://docs.rs/regex.\n    reactRemoveProperties: { properties: ["^data-custom$"] },\n  },\n};\n')),(0,r.kt)("h2",{id:"jsx-importsource"},"JSX ImportSource"),(0,r.kt)("p",null,"Same as jsxImportSource in ",(0,r.kt)("inlineCode",{parentName:"p"},"jsconfig.json")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"tsconfig.json")," and apply that. This is commonly used with libraries like Theme UI."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'export default {\n  compiler: {\n    jsxImportSource: "preact",\n  },\n};\n')),(0,r.kt)("h2",{id:"styled-components"},"Styled Components"),(0,r.kt)("p",null,"Works like ",(0,r.kt)("inlineCode",{parentName:"p"},"babel-plugin-styled-components"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'type StyledComponentsOptions =\n  | boolean\n  | {\n      // Enabled by default in development, disabled in production to reduce file size,\n      // setting this will override the default for all environments.\n      displayName?: boolean;\n      // Enabled by default.\n      ssr?: boolean;\n      // Enabled by default.\n      fileName?: boolean;\n      // Empty by default.\n      topLevelImportPaths?: string[];\n      // Defaults to ["index"].\n      meaninglessFileNames?: string[];\n      // Enabled by default.\n      cssProp?: boolean;\n      // Empty by default.\n      namespace?: string;\n      // Not supported yet.\n      minify?: boolean;\n      // Not supported yet.\n      transpileTemplateLiterals?: boolean;\n      // Not supported yet.\n      pure?: boolean;\n    };\n\nexport default {\n  compiler: {\n    // see https://styled-components.com/docs/tooling#babel-plugin for more info on the options.\n    styledComponents: {} as StyledComponentsOptions,\n  },\n};\n')),(0,r.kt)("h2",{id:"emotion-css"},"Emotion CSS"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"type EmotionOptions =\n  | boolean\n  | {\n      // default is true. It will be disabled when build type is production.\n      sourceMap?: boolean;\n      // default is 'dev-only'.\n      autoLabel?: \"never\" | \"dev-only\" | \"always\";\n      // default is '[local]'.\n      // Allowed values: `[local]` `[filename]` and `[dirname]`\n      // This option only works when autoLabel is set to 'dev-only' or 'always'.\n      // It allows you to define the format of the resulting label.\n      // The format is defined via string where variable parts are enclosed in square brackets [].\n      // For example labelFormat: \"my-classname--[local]\", where [local] will be replaced with the name of the variable the result is assigned to.\n      labelFormat?: string;\n    };\n\nexport default {\n  compiler: {\n    // see https://styled-components.com/docs/tooling#babel-plugin for more info on the options.\n    emotion: {} as EmotionOptions,\n  },\n};\n")),(0,r.kt)("p",null,"Only ",(0,r.kt)("inlineCode",{parentName:"p"},"importMap")," in ",(0,r.kt)("inlineCode",{parentName:"p"},"@emotion/babel-plugin")," is not supported for now."),(0,r.kt)("h2",{id:"decorators"},"Decorators"),(0,r.kt)("p",null,"This flag is only supported for compatibility with existing applications. We do not recommend using legacy decorators in new applications."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"export default {\n  compiler: {\n    experimentalDecorators: true,\n    // emitDecoratorMetadata: true,\n  },\n};\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"  // react\n  reactRemoveProperties?: CompilerOptions['reactRemoveProperties'];\n  jsxImportSource?: CompilerOptions['jsxImportSource'];\n\n  // third-party libraries\n  styledComponents?: CompilerOptions['styledComponents'];\n  emotion?: CompilerOptions['emotion'];\n")))}m.isMDXComponent=!0}}]);
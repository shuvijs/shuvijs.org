"use strict";(self.webpackChunkshuvi_document=self.webpackChunkshuvi_document||[]).push([[6060],{9613:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return m}});var n=r(9496);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),s=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},p=function(e){var t=s(e.components);return n.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),f=s(r),m=o,d=f["".concat(l,".").concat(m)]||f[m]||u[m]||a;return r?n.createElement(d,c(c({ref:t},p),{},{components:r})):n.createElement(d,c({ref:t},p))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,c=new Array(a);c[0]=f;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:o,c[1]=i;for(var s=2;s<a;s++)c[s]=r[s];return n.createElement.apply(null,c)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},1481:function(e,t,r){r.r(t),r.d(t,{assets:function(){return p},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return i},metadata:function(){return s},toc:function(){return u}});var n=r(2848),o=r(9213),a=(r(9496),r(9613)),c=["components"],i={},l=void 0,s={unversionedId:"blog",id:"blog",title:"blog",description:"history",source:"@site/docs/blog.md",sourceDirName:".",slug:"/blog",permalink:"/shuvijs.org/docs/blog",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/blog.md",tags:[],version:"current",frontMatter:{}},p={},u=[{value:"history",id:"history",level:2},{value:"SWC replacing Babel by default",id:"swc-replacing-babel-by-default",level:3},{value:"<code>Parcel/css</code> replacing Post-css by experimental",id:"parcelcss-replacing-post-css-by-experimental",level:3}],f={toc:u};function m(e){var t=e.components,r=(0,o.Z)(e,c);return(0,a.kt)("wrapper",(0,n.Z)({},f,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"history"},"history"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Tom and Repraance\n")),(0,a.kt)("h3",{id:"swc-replacing-babel-by-default"},"SWC replacing Babel by default"),(0,a.kt)("p",null,"shuvi now uses Rust-based compiler ",(0,a.kt)("a",{parentName:"p",href:"https://swc.rs/"},"SWC")," to compile JavaScript/TypeScript. This new compiler is more faster than Babel and promoted better development experience."),(0,a.kt)("h3",{id:"parcelcss-replacing-post-css-by-experimental"},(0,a.kt)("inlineCode",{parentName:"h3"},"Parcel/css")," replacing Post-css by experimental"),(0,a.kt)("p",null,"shuvi now uses Rust-based compiler ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/parcel-bundler/parcel-css"},"@parcel/css")," to compile and minifier css content. "),(0,a.kt)("p",null,"This new compiler is more faster than Post-css and ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/parcel-bundler/parcel-css#benchmarks"},"excellent compression performance"),"."),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("a",{parentName:"p",href:"/shuvijs.org/docs/api-reference/config#experimentalparcelcss"},"Enable experimental features to modify config"))))}m.isMDXComponent=!0}}]);
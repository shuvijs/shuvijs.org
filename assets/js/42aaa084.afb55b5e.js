"use strict";(self.webpackChunkshuvi_document=self.webpackChunkshuvi_document||[]).push([[9485],{9613:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>c});var a=n(9496);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=p(n),c=r,k=m["".concat(s,".").concat(c)]||m[c]||d[c]||o;return n?a.createElement(k,i(i({ref:t},u),{},{components:n})):a.createElement(k,i({ref:t},u))}));function c(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var p=2;p<o;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},6123:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var a=n(2081),r=(n(9496),n(9613));const o={sidebar_position:1,id:"Routes"},i=void 0,l={unversionedId:"guides/Routes",id:"guides/Routes",title:"Routes",description:"Shuvi provides a file system-based convention routing rule.",source:"@site/docs/guides/routes.md",sourceDirName:"guides",slug:"/guides/Routes",permalink:"/shuvijs.org/docs/guides/Routes",draft:!1,editUrl:"https://github.com/shuvijs/shuvijs.org/tree/master/docs/guides/routes.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,id:"Routes"},sidebar:"guides",previous:{title:"Overview",permalink:"/shuvijs.org/docs/guides"},next:{title:"Data Fetching",permalink:"/shuvijs.org/docs/guides/Data Fetching"}},s={},p=[{value:"Generate routing paths",id:"generate-routing-paths",level:2},{value:"Generate dynamic paths",id:"generate-dynamic-paths",level:2},{value:"Splats",id:"splats",level:3},{value:"General rules",id:"general-rules",level:3},{value:"Generate routing endpoints",id:"generate-routing-endpoints",level:2},{value:"Page routes",id:"page-routes",level:3},{value:"Usage",id:"usage",level:4},{value:"Example",id:"example",level:4},{value:"Layout routes",id:"layout-routes",level:3},{value:"Usage",id:"usage-1",level:4},{value:"Example",id:"example-1",level:4},{value:"API routes",id:"api-routes",level:3},{value:"Usage",id:"usage-2",level:4},{value:"Example",id:"example-2",level:4},{value:"enhanced request",id:"enhanced-request",level:4},{value:"Custom config",id:"custom-config",level:4},{value:"enhanced response",id:"enhanced-response",level:4}],u={toc:p};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Shuvi provides a file system-based convention routing rule.\nRead the agreed files from ",(0,r.kt)("strong",{parentName:"p"},"src/routes")," in the project root directory,\nsuch as page.js, ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"layout.js"))," and ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"api.js")),".\nWhich produces the corresponding ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"React Component"))," routing hierarchy."),(0,r.kt)("h2",{id:"generate-routing-paths"},"Generate routing paths"),(0,r.kt)("p",null,"The names of the directories under src/routes determine the rules for generating routes"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"src\n\u2514\u2500\u2500 routes\n    \u251c\u2500\u2500 page.jsx \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 /\n    \u251c\u2500\u2500 categories\n    \u2502   \u251c\u2500\u2500 page.jsx \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 /categories\n    \u2502   \u251c\u2500\u2500 $categoryId\n    \u2502   \u2502   \u2514\u2500\u2500 page.jsx \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 /categories/:categoryId\n    \u251c\u2500\u2500 articles\n    \u2502   \u251c\u2500\u2500 page.jsx \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 /articles\n    \u2502   \u251c\u2500\u2500 $articleId\n    \u2502   \u2502   \u251c\u2500\u2500 page.jsx \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 /articles/:articleId\n    \u2502   \u2502   \u2514\u2500\u2500 $commentId\n    \u2502   \u2502       \u2514\u2500\u2500 page.jsx \u2500\u2500\u2500\u2500\u2500 /articles/:articleId/:commentId\n    \u2502   \u251c\u2500\u2500 layout.jsx\n    \u251c\u2500\u2500 tags\n    \u2502   \u251c\u2500\u2500 page.jsx \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 /tags\n    \u251c\u2500\u2500 setting\n    \u2502   \u251c\u2500\u2500 page.jsx \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 /setting\n    \u2502   \u251c\u2500\u2500 accountInfo\n    \u2502   \u2502   \u2514\u2500\u2500 page.jsx \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 /setting/accountInfo\n    \u2502   \u251c\u2500\u2500 preference\n    \u2502   \u2502   \u2514\u2500\u2500 page.jsx \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 /setting/preference\n    \u2502   \u251c\u2500\u2500 others\n    \u2502   \u2502   \u2514\u2500\u2500 page.jsx \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 /setting/others\n    \u2502   \u2502   \u2514\u2500\u2500 $\n    \u2502   \u2502       \u2514\u2500\u2500 page.jsx \u2500\u2500\u2500\u2500\u2500 /setting/others/*\n    \u2502   \u2514\u2500\u2500 layout.jsx\n    \u2514\u2500\u2500 layout.jsx\n")),(0,r.kt)("h2",{id:"generate-dynamic-paths"},"Generate dynamic paths"),(0,r.kt)("p",null,"Defining routes by using predefined paths is not always enough for complex applications.\nIn shuvi you can add brackets to a directory name (",(0,r.kt)("inlineCode",{parentName:"p"},"$param"),") to create a dynamic route (a.k.a. url slugs, pretty urls, and others)."),(0,r.kt)("p",null,"Consider the following directory ",(0,r.kt)("inlineCode",{parentName:"p"},"routes/post/$postId"),":"),(0,r.kt)("p",null,"Any route like ",(0,r.kt)("inlineCode",{parentName:"p"},"/post/traveling"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"/post/hiking"),", etc. will be matched by ",(0,r.kt)("inlineCode",{parentName:"p"},"routes/post/$postId"),"."),(0,r.kt)("p",null,"For example, the route ",(0,r.kt)("inlineCode",{parentName:"p"},"/post/traveling")," will have the following ",(0,r.kt)("inlineCode",{parentName:"p"},"params")," object:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{ "postId": "traveling" }\n')),(0,r.kt)("p",null,"Similarly, the route ",(0,r.kt)("inlineCode",{parentName:"p"},"/post/traveling?language=en")," will have the following ",(0,r.kt)("inlineCode",{parentName:"p"},"params")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"query")," object:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:"lines",lines:!0},'// params\n{"postId": "traveling"}\n// query\n{ "language": "en" }\n')),(0,r.kt)("p",null,"Multiple dynamic route segments work the same way. The page ",(0,r.kt)("inlineCode",{parentName:"p"},"routes/post/$postId/$commentId")," will match the route ",(0,r.kt)("inlineCode",{parentName:"p"},"/post/traveling/randomCommentId")," and its ",(0,r.kt)("inlineCode",{parentName:"p"},"params")," object will be:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{ "postId": "traveling", "commentId": "randomCommentId" }\n')),(0,r.kt)("h3",{id:"splats"},"Splats"),(0,r.kt)("p",null,"Dynamic routes could deal with any URL by naming a fold ",(0,r.kt)("inlineCode",{parentName:"p"},"$"),". It will match the value in the rest of URL to the end."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"routes/setting/others/$")," matches ",(0,r.kt)("inlineCode",{parentName:"li"},"/setting/others"),", but also ",(0,r.kt)("inlineCode",{parentName:"li"},"/setting/others/background"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"/setting/others/background/color"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"/setting/others/resolution")," and so on.")),(0,r.kt)("p",null,"You could get matched params in the loader function"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'import { Loader } from "@shuvi/runtime";\n\nexport const loader: Loader = async (ctx) => {\n  ctx.params["*"]; // "" or "background" or "background/color"\n};\n\nexport default App;\n')),(0,r.kt)("p",null,"or using the hook revealed from ",(0,r.kt)("inlineCode",{parentName:"p"},"shuvi")," out of the box"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},'import { useParams } from "@shuvi/runtime";\n\nfunction App() {\n  const params = useParams();\n  params["*"]; // "" or "background" or "background/color"\n}\n\nexport default App;\n')),(0,r.kt)("h3",{id:"general-rules"},"General rules"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"path"),(0,r.kt)("th",{parentName:"tr",align:null},"route"),(0,r.kt)("th",{parentName:"tr",align:null},"matched url"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"routes/tags"),(0,r.kt)("td",{parentName:"tr",align:null},"/tags"),(0,r.kt)("td",{parentName:"tr",align:null},"/tags")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"routes/articles/$articleId"),(0,r.kt)("td",{parentName:"tr",align:null},"/articles/:articleId"),(0,r.kt)("td",{parentName:"tr",align:null},"/articles/traveling, /articles/hiking")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"routes/setting/others/$"),(0,r.kt)("td",{parentName:"tr",align:null},"/setting/others/","*"),(0,r.kt)("td",{parentName:"tr",align:null},"/setting/others, /setting/others/any-routes, /setting/others/any-routes/any/routes")))),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"[details about matched rules]","(#Match rules)")),(0,r.kt)("h2",{id:"generate-routing-endpoints"},"Generate routing endpoints"),(0,r.kt)("h3",{id:"page-routes"},"Page routes"),(0,r.kt)("p",null,"The directory name determines the path, page.js determines the rendered content.\n",(0,r.kt)("inlineCode",{parentName:"p"},"page.js")," should export a ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"React component"))," by default.page.js is leaf node in the routing tree\uff0c\nCan be nested in any folder."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Note that all future examples will use the .js extension.\nThe extension of the routing file is not limited to ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},".js")),", but can also be ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},".ts")),", ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},".tsx")),", and ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},".jsx")),".")),(0,r.kt)("h4",{id:"usage"},"Usage"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Create a ",(0,r.kt)("inlineCode",{parentName:"li"},"page.js")," file under your ",(0,r.kt)("inlineCode",{parentName:"li"},"routes")," directory."),(0,r.kt)("li",{parentName:"ol"},"Finally, export a React component function from the ",(0,r.kt)("inlineCode",{parentName:"li"},"page.js")," file by default.")),(0,r.kt)("h4",{id:"example"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"export default function Index() {\n  return <div>index</div>;\n}\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"export default function Index() {\n  return <div>a-b</div>;\n}\n")),(0,r.kt)("h3",{id:"layout-routes"},"Layout routes"),(0,r.kt)("p",null,"Layout is suitable for scenarios that require nested routing.\nSimilar to the ",(0,r.kt)("inlineCode",{parentName:"p"},"<router-view>")," of ",(0,r.kt)("inlineCode",{parentName:"p"},"Vue-router")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"<Outlet>")," of ",(0,r.kt)("inlineCode",{parentName:"p"},"Remix")),(0,r.kt)("p",null,"Layout can be understood as a more advanced page, it has all the capabilities of page,\nand has the ability to share areas without repeated rendering and scheduling of sub-routes."),(0,r.kt)("h4",{id:"usage-1"},"Usage"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Create a ",(0,r.kt)("inlineCode",{parentName:"li"},"layout.js")," file under your ",(0,r.kt)("inlineCode",{parentName:"li"},"routes")," directory."),(0,r.kt)("li",{parentName:"ol"},"Finally, export a React component function from the ",(0,r.kt)("inlineCode",{parentName:"li"},"layout.js")," file by default."),(0,r.kt)("li",{parentName:"ol"},"Use 'RouterView Component' to render your child routes")),(0,r.kt)("h4",{id:"example-1"},"Example"),(0,r.kt)("p",null,"A small example of a shared top navigation bar."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"src/routes/dashboard/layout.js"))," \u2192 ",(0,r.kt)("inlineCode",{parentName:"p"},"/dashboard")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},'import { RouterView } from "@shuvi/runtime";\n\nexport default function Layout() {\n  return (\n    <div>\n      <header>\n        <h1>dashboard</h1>\n        <nav>\n          <Link to="categories">categories</Link>\n          <Link to="articles">articles</Link>\n          <Link to="tags">tags</Link>\n        </nav>\n      </header>\n      <main>\n        <RouterView />\n      </main>\n    </div>\n  );\n}\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"src/routes/dashboard/categories/page.js"))," \u2192 ",(0,r.kt)("inlineCode",{parentName:"p"},"/dashboard/categories")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"export default function () {\n  return <div>categories</div>;\n}\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"src/routes/dashboard/articles/page.js"))," \u2192 ",(0,r.kt)("inlineCode",{parentName:"p"},"/dashboard/articles")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"export default function () {\n  return <div>articles</div>;\n}\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"src/routes/dashboard/tags/page.js"))," \u2192 ",(0,r.kt)("inlineCode",{parentName:"p"},"/dashboard/tags")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"export default function () {\n  return <div>tags</div>;\n}\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"src/routes/dashboard/page.js"))," \u2192 ",(0,r.kt)("inlineCode",{parentName:"p"},"/dashboard")," can be used as index route."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"export default function () {\n  return <div>index</div>;\n}\n")),(0,r.kt)("p",null,"Now,\naccessing any sub-route under /dashboard/ will render the matching layout and page together.\nWhen the route changes, the layout will not be unmounted.\nImplemented regional component sharing"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"Notice"),": Layout and page do not conflict with dynamic segment and can be freely combined.")),(0,r.kt)("h3",{id:"api-routes"},"API routes"),(0,r.kt)("p",null,"API routes provide a solution to build your ",(0,r.kt)("strong",{parentName:"p"},"API")," with shuvi."),(0,r.kt)("p",null,"Any file inside the folder ",(0,r.kt)("inlineCode",{parentName:"p"},"src/routes"),", each api is associated with a route based on its file name. They are server-side only bundles and won't increase your client-side bundle size."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"path"),(0,r.kt)("th",{parentName:"tr",align:null},"route"),(0,r.kt)("th",{parentName:"tr",align:null},"matched url"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"routes/api/post/create/api.js"),(0,r.kt)("td",{parentName:"tr",align:null},"/api/post/create"),(0,r.kt)("td",{parentName:"tr",align:null},"/api/post/create")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"routes/api/post/$pid/api.js"),(0,r.kt)("td",{parentName:"tr",align:null},"/api/post/:pid"),(0,r.kt)("td",{parentName:"tr",align:null},"/api/post/1, /api/post/abc")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"routes/api/post/$/api.js"),(0,r.kt)("td",{parentName:"tr",align:null},"/api/post/","*"),(0,r.kt)("td",{parentName:"tr",align:null},"/api/post, /api/post/1, /api/post/1/2, /api/post/abc/other/path")))),(0,r.kt)("h4",{id:"usage-2"},"Usage"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Create a ",(0,r.kt)("inlineCode",{parentName:"li"},"api.js")," file under your ",(0,r.kt)("inlineCode",{parentName:"li"},"routes")," directory."),(0,r.kt)("li",{parentName:"ol"},"Finally, export an api function from the ",(0,r.kt)("inlineCode",{parentName:"li"},"api.js")," file by default.")),(0,r.kt)("h4",{id:"example-2"},"Example"),(0,r.kt)("p",null,"For example, the following API route ",(0,r.kt)("inlineCode",{parentName:"p"},"routes/api/user/api.js")," returns a ",(0,r.kt)("inlineCode",{parentName:"p"},"json")," response with a status code of ",(0,r.kt)("inlineCode",{parentName:"p"},"200"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'export default function handler(req, res) {\n  res.status(200).json({ name: "John Doe" });\n}\n')),(0,r.kt)("p",null,"For an API route to work, you need to export a function as default (a.k.a ",(0,r.kt)("strong",{parentName:"p"},"request handler"),"), which then receives the following parameters:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"req"),": An instance of ",(0,r.kt)("a",{parentName:"li",href:"https://nodejs.org/api/http.html#http_class_http_incomingmessage"},"http.IncomingMessage"),", plus some ",(0,r.kt)("a",{parentName:"li",href:"#enhanced-request"},"enhanced request")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"res"),": An instance of ",(0,r.kt)("a",{parentName:"li",href:"https://nodejs.org/api/http.html#http_class_http_serverresponse"},"http.ServerResponse"),", plus some ",(0,r.kt)("a",{parentName:"li",href:"#enhanced-response"},"enhanced response"))),(0,r.kt)("p",null,"To handle different HTTP methods in an API route, you can use ",(0,r.kt)("inlineCode",{parentName:"p"},"req.method")," in your request handler, like so:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'import { RuntimeServer } from "@shuvi/runtime";\nconst apiHandler: RuntimeServer.IApiRequestHandler = function handler(\n  req,\n  res\n) {\n  if (req.method === "POST") {\n    // Process a POST request\n  } else {\n    // Handle any other HTTP method\n  }\n};\nexport default apiHandler;\n')),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Details of ",(0,r.kt)("inlineCode",{parentName:"p"},"RuntimeServer.IApiRequestHandler")," types is ",(0,r.kt)("a",{parentName:"p",href:"/shuvijs.org/docs/old-reference/runtime/modules/RuntimeServer#iapirequesthandler"},"here"))),(0,r.kt)("p",null,"To fetch API endpoints, take a look into any of the examples at the start of this section."),(0,r.kt)("h4",{id:"enhanced-request"},"enhanced request"),(0,r.kt)("p",null,"API routes provide built in middlewares which parse the incoming request (",(0,r.kt)("inlineCode",{parentName:"p"},"req"),"). Those middlewares are:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"req.cookies")," - An object containing the cookies sent by the request. Defaults to ",(0,r.kt)("inlineCode",{parentName:"li"},"{}")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"req.query")," - An object containing the ",(0,r.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/Query_string"},"query string"),". Defaults to ",(0,r.kt)("inlineCode",{parentName:"li"},"{}")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"req.body")," - An object containing the body parsed by ",(0,r.kt)("inlineCode",{parentName:"li"},"content-type"),", or ",(0,r.kt)("inlineCode",{parentName:"li"},"null")," if no body was sent")),(0,r.kt)("h4",{id:"custom-config"},"Custom config"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"apiConfig")," object includes all configs available for API routes."),(0,r.kt)("p",null,"Every API route can export a ",(0,r.kt)("inlineCode",{parentName:"p"},"config")," object to change the default configs, which are the following:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'export const config = {\n  apiConfig: {\n    bodyParser: {\n      sizeLimit: "1mb",\n    },\n  },\n};\n')),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"bodyParser")," Enables body parsing, you can disable it if you want to consume it as a ",(0,r.kt)("inlineCode",{parentName:"p"},"Stream"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"export const config = {\n  apiConfig: {\n    bodyParser: false,\n  },\n};\n")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"bodyParser.sizeLimit")," is the maximum size allowed for the parsed body, in any format supported by ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/visionmedia/bytes.js"},"bytes"),", like so:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'export const config = {\n  apiConfig: {\n    bodyParser: {\n      sizeLimit: "500kb",\n    },\n  },\n};\n')),(0,r.kt)("h4",{id:"enhanced-response"},"enhanced response"),(0,r.kt)("p",null,"The response (",(0,r.kt)("inlineCode",{parentName:"p"},"res"),") includes a set of Express.js-like methods to improve the developer experience and increase the speed of creating new API endpoints, take a look at the following example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'export default function handler(req, res) {\n  res.status(200).json({ name: "shuvi" });\n}\n')),(0,r.kt)("p",null,"The included helpers are:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"res.status(code)")," - A function to set the status code. ",(0,r.kt)("inlineCode",{parentName:"li"},"code")," must be a valid ",(0,r.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/List_of_HTTP_status_codes"},"HTTP status code")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"res.json(body)")," - Sends a JSON response. ",(0,r.kt)("inlineCode",{parentName:"li"},"body")," must be a ",(0,r.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Glossary/Serialization"},"serialiazable object")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"res.send(body)")," - Sends the HTTP response. ",(0,r.kt)("inlineCode",{parentName:"li"},"body")," can be a ",(0,r.kt)("inlineCode",{parentName:"li"},"string"),", an ",(0,r.kt)("inlineCode",{parentName:"li"},"object")," or a ",(0,r.kt)("inlineCode",{parentName:"li"},"Buffer")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"res.redirect([status,] path)")," - Redirects to a specified path or URL. ",(0,r.kt)("inlineCode",{parentName:"li"},"status")," must be a valid ",(0,r.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/List_of_HTTP_status_codes"},"HTTP status code"),". If not specified, ",(0,r.kt)("inlineCode",{parentName:"li"},"status"),' defaults to "307" "Temporary redirect".')),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Notice: api.js and page.js are conflicting, when both exist, only page.js will be enabled.")))}d.isMDXComponent=!0}}]);